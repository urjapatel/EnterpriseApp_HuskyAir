package com.ur.spring.finalex.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.ur.spring.finalex.model.Reservation;
import com.ur.spring.finalex.repository.ReservationRepository;

import java.util.List;

@Controller
public class ReservationController {
    
    private final ReservationRepository reservationRepository;
    
    public ReservationController(ReservationRepository reservationRepository) {
        this.reservationRepository = reservationRepository;
    }

    // Show create form
    @GetMapping("/reservation")
    public String showCreateForm(Model model) {
        model.addAttribute("reservation", new Reservation());
        return "reservation-form";
    }

    // Process create form submission
    @PostMapping("/reservation")
    public String createReservation(@ModelAttribute Reservation reservation, 
                                  RedirectAttributes redirectAttributes) {
        try {
            Reservation saved = reservationRepository.save(reservation);
            redirectAttributes.addFlashAttribute("successMessage", 
                "Reservation created successfully! ID: " + saved.getId());
            return "redirect:/reservations";
        } catch (Exception e) {
            redirectAttributes.addFlashAttribute("errorMessage", 
                "Error creating reservation: " + e.getMessage());
            return "redirect:/reservation";
        }
    }

    // List all reservations
    @GetMapping("/reservations")
    public String listReservations(Model model) {
        model.addAttribute("reservations", reservationRepository.findAll());
        return "reservation-list";
    }

    // Show single reservation
    @GetMapping("/reservations/view/{id}")
    public String viewReservation(@PathVariable String id, Model model) {
        reservationRepository.findById(id).ifPresent(reservation -> {
            model.addAttribute("reservation", reservation);
        });
        return "reservation-view";
    }

    // Show edit form
    @GetMapping("/reservations/edit/{id}")
    public String showEditForm(@PathVariable String id, Model model) {
        reservationRepository.findById(id).ifPresent(reservation -> {
            model.addAttribute("reservation", reservation);
        });
        return "reservation-form";
    }

    // Process edit form submission
    @PostMapping("/reservations/update/{id}")
    public String updateReservation(@PathVariable String id, 
                                  @ModelAttribute Reservation reservation,
                                  RedirectAttributes redirectAttributes) {
        try {
        	// Log the incoming request
            System.out.println("Attempting to update reservation with ID: " + id);
            System.out.println("Received reservation data: " + reservation.toString());
            reservation.setId(id); // Ensure ID is preserved
            reservationRepository.save(reservation);
            redirectAttributes.addFlashAttribute("successMessage", 
                "Reservation updated successfully!");
            return "redirect:/reservations";
        } catch (Exception e) {
            redirectAttributes.addFlashAttribute("errorMessage", 
                "Error updating reservation: " + e.getMessage());
            return "redirect:/reservations/edit/" + id;
        }
    }

    // Delete reservation
    @PostMapping("/reservations/delete/{id}")
    public String deleteReservation(@PathVariable String id, 
                                  RedirectAttributes redirectAttributes) {
        try {
            reservationRepository.deleteById(id);
            redirectAttributes.addFlashAttribute("successMessage", 
                "Reservation deleted successfully");
        } catch (Exception e) {
            redirectAttributes.addFlashAttribute("errorMessage", 
                "Error deleting reservation: " + e.getMessage());
        }
        return "redirect:/reservations";
    }
}